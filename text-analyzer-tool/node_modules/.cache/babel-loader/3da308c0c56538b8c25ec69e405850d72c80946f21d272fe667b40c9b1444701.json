{"ast":null,"code":"var _jsxFileName = \"/Users/luisaranda/Documents/Projects/React 1/React1/text-analyzer-tool/src/components/ResultBox/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport './index.scss';\nimport { pronouns } from '../../data/pronouns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultBox = _ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  const [resultBar, setResultBar] = useState({\n    Words: 0,\n    Characters: 0,\n    Sentences: 0,\n    Paragraphs: 0,\n    Pronouns: 0\n  });\n  const updateInfo = useCallback(() => {\n    const cleanText = text.trim();\n    const chars = cleanText.length;\n    const words = cleanText.split(' ').filter(w => w !== '');\n    const copyResultBar = {\n      ...resultBar\n    };\n    copyResultBar.Words = words.length;\n    copyResultBar.Characters = chars;\n    copyResultBar.Sentences = (cleanText.match(/[\\w|\\)][.?!](\\s|$)/g) || []).length;\n    console.log(cleanText, cleanText.replace(/\\n$/gm, ''));\n    copyResultBar.Paragraphs = (cleanText.replace(/\\n$/gm, '').split(/\\n/) || []).length;\n    console.log('words', words);\n    const filtered = words.filter(w => pronouns.includes(w.replace(/[?.,!]/g, '').toLowerCase()));\n    console.log(filtered);\n    copyResultBar.Pronouns = words.filter(w => pronouns.includes(w.replace(/[?.,!]/g, '').toLowerCase())).length;\n    setResultBar(copyResultBar);\n  }, [resultBar, text]);\n  useEffect(() => {\n    updateInfo();\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-bar\",\n    children: Object.keys(resultBar).map(title => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"box-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"box-value\",\n        children: resultBar[title]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultBox, \"hgmJ26SFvAvPwY9q+fsa7/ie3/0=\");\n_c = ResultBox;\nexport default ResultBox;\nvar _c;\n$RefreshReg$(_c, \"ResultBox\");","map":{"version":3,"names":["useState","useEffect","useCallback","pronouns","ResultBox","text","resultBar","setResultBar","Words","Characters","Sentences","Paragraphs","Pronouns","updateInfo","cleanText","trim","chars","length","words","split","filter","w","copyResultBar","match","console","log","replace","filtered","includes","toLowerCase","Object","keys","map","title"],"sources":["/Users/luisaranda/Documents/Projects/React 1/React1/text-analyzer-tool/src/components/ResultBox/index.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\nimport './index.scss'\nimport { pronouns } from '../../data/pronouns'\n\ninterface IResultBox {\n  text: string\n}\n\nconst ResultBox = ({ text }: IResultBox) => {\n  const [resultBar, setResultBar] = useState<Record<string, number>>({\n    Words: 0,\n    Characters: 0,\n    Sentences: 0,\n    Paragraphs: 0,\n    Pronouns: 0,\n  })\n  const updateInfo = useCallback(() => {\n    const cleanText = text.trim()\n    const chars = cleanText.length\n    const words = cleanText.split(' ').filter((w) => w !== '')\n    const copyResultBar = { ...resultBar }\n    copyResultBar.Words = words.length\n    copyResultBar.Characters = chars\n\n    copyResultBar.Sentences = (cleanText.match(/[\\w|\\)][.?!](\\s|$)/g) || []).length\n    console.log(cleanText, cleanText.replace(/\\n$/gm, ''))\n    copyResultBar.Paragraphs = (cleanText.replace(/\\n$/gm, '').split(/\\n/) || []).length\n    console.log('words', words)\n    const filtered = words.filter((w) => pronouns.includes(w.replace(/[?.,!]/g, '').toLowerCase()))\n    console.log(filtered)\n    copyResultBar.Pronouns = words.filter((w) =>\n      pronouns.includes(w.replace(/[?.,!]/g, '').toLowerCase())\n    ).length\n    setResultBar(copyResultBar)\n  }, [resultBar, text])\n\n  useEffect(() => {\n    updateInfo()\n  }, [text])\n\n  return (\n    <div className=\"result-bar\">\n      {Object.keys(resultBar).map((title: string) => (\n        <div className=\"result-box\" key={title}>\n          <span className=\"box-title\">{title}</span>\n          <span className=\"box-value\">{resultBar[title]}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ResultBox\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,qBAAqB;AAAA;AAM9C,MAAMC,SAAS,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC;EAAiB,CAAC;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAyB;IACjEQ,KAAK,EAAE,CAAC;IACRC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE,CAAC;IACZC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGX,WAAW,CAAC,MAAM;IACnC,MAAMY,SAAS,GAAGT,IAAI,CAACU,IAAI,EAAE;IAC7B,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAM;IAC9B,MAAMC,KAAK,GAAGJ,SAAS,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,EAAE,CAAC;IAC1D,MAAMC,aAAa,GAAG;MAAE,GAAGhB;IAAU,CAAC;IACtCgB,aAAa,CAACd,KAAK,GAAGU,KAAK,CAACD,MAAM;IAClCK,aAAa,CAACb,UAAU,GAAGO,KAAK;IAEhCM,aAAa,CAACZ,SAAS,GAAG,CAACI,SAAS,CAACS,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE,EAAEN,MAAM;IAC/EO,OAAO,CAACC,GAAG,CAACX,SAAS,EAAEA,SAAS,CAACY,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACtDJ,aAAa,CAACX,UAAU,GAAG,CAACG,SAAS,CAACY,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACP,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAEF,MAAM;IACpFO,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEP,KAAK,CAAC;IAC3B,MAAMS,QAAQ,GAAGT,KAAK,CAACE,MAAM,CAAEC,CAAC,IAAKlB,QAAQ,CAACyB,QAAQ,CAACP,CAAC,CAACK,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACG,WAAW,EAAE,CAAC,CAAC;IAC/FL,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;IACrBL,aAAa,CAACV,QAAQ,GAAGM,KAAK,CAACE,MAAM,CAAEC,CAAC,IACtClB,QAAQ,CAACyB,QAAQ,CAACP,CAAC,CAACK,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACG,WAAW,EAAE,CAAC,CAC1D,CAACZ,MAAM;IACRV,YAAY,CAACe,aAAa,CAAC;EAC7B,CAAC,EAAE,CAAChB,SAAS,EAAED,IAAI,CAAC,CAAC;EAErBJ,SAAS,CAAC,MAAM;IACdY,UAAU,EAAE;EACd,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,UACxByB,MAAM,CAACC,IAAI,CAACzB,SAAS,CAAC,CAAC0B,GAAG,CAAEC,KAAa,iBACxC;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAM,SAAS,EAAC,WAAW;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1C;QAAM,SAAS,EAAC,WAAW;QAAA,UAAE3B,SAAS,CAAC2B,KAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA,GAFtBA,KAAK;MAAA;MAAA;MAAA;IAAA,QAIvC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GA1CK7B,SAAS;AAAA,KAATA,SAAS;AA4Cf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}