{"ast":null,"code":"var _jsxFileName = \"/Users/luisaranda/Documents/Projects/React 1/React1/text-analyzer-tool/src/components/BottomResultBox/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WPM = 225;\nconst BottomResultBox = _ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  const [bottomResultBar, setBottomResultBar] = useState({\n    'Average Reading Time': '~',\n    'Longest word': '-'\n  });\n  const updateInfo = useCallback(() => {\n    const cleanText = text.trim();\n    const chars = cleanText.length;\n    const words = cleanText.replace(/\\n/g, ' ').replace(/[?!.,]/g, ' ').split(' ').filter(w => w !== '');\n    console.log(words);\n    const copyResults = {\n      ...bottomResultBar\n    };\n    const time = Math.ceil(words.length / WPM);\n    copyResults['Average Reading Time'] = time ? `~${time}` : '~';\n    setBottomResultBar(copyResults);\n  }, [bottomResultBar, text]);\n  useEffect(() => {\n    updateInfo();\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bottom-result-bar\",\n    children: Object.keys(bottomResultBar).map(title => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"box-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"box-value\",\n        children: bottomResultBar[title]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BottomResultBox, \"lgOyuTM2L7hdpuMzMga8iWQOr4c=\");\n_c = BottomResultBox;\nexport default BottomResultBox;\nvar _c;\n$RefreshReg$(_c, \"BottomResultBox\");","map":{"version":3,"names":["useState","useEffect","useCallback","WPM","BottomResultBox","text","bottomResultBar","setBottomResultBar","updateInfo","cleanText","trim","chars","length","words","replace","split","filter","w","console","log","copyResults","time","Math","ceil","Object","keys","map","title"],"sources":["/Users/luisaranda/Documents/Projects/React 1/React1/text-analyzer-tool/src/components/BottomResultBox/index.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\nimport './index.scss'\n\ninterface IResultBox {\n  text: string\n}\n\nconst WPM = 225\n\nconst BottomResultBox = ({ text }: IResultBox) => {\n  const [bottomResultBar, setBottomResultBar] = useState<Record<string, string>>({\n    'Average Reading Time': '~',\n    'Longest word': '-',\n  })\n  const updateInfo = useCallback(() => {\n    const cleanText = text.trim()\n    const chars = cleanText.length\n    const words = cleanText\n      .replace(/\\n/g, ' ')\n      .replace(/[?!.,]/g, ' ')\n      .split(' ')\n      .filter((w) => w !== '')\n    console.log(words)\n    const copyResults = { ...bottomResultBar }\n    const time = Math.ceil(words.length / WPM)\n    copyResults['Average Reading Time'] = time ? `~${time}` : '~'\n\n    setBottomResultBar(copyResults)\n  }, [bottomResultBar, text])\n\n  useEffect(() => {\n    updateInfo()\n  }, [text])\n\n  return (\n    <div className=\"bottom-result-bar\">\n      {Object.keys(bottomResultBar).map((title: string) => (\n        <div className=\"result-box\" key={title}>\n          <span className=\"box-title\">{title}</span>\n          <span className=\"box-value\">{bottomResultBar[title]}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default BottomResultBox\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAO,cAAc;AAAA;AAMrB,MAAMC,GAAG,GAAG,GAAG;AAEf,MAAMC,eAAe,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC;EAAiB,CAAC;EAC3C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAyB;IAC7E,sBAAsB,EAAE,GAAG;IAC3B,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,MAAMQ,UAAU,GAAGN,WAAW,CAAC,MAAM;IACnC,MAAMO,SAAS,GAAGJ,IAAI,CAACK,IAAI,EAAE;IAC7B,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAM;IAC9B,MAAMC,KAAK,GAAGJ,SAAS,CACpBK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CACvBC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,EAAE,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IAClB,MAAMO,WAAW,GAAG;MAAE,GAAGd;IAAgB,CAAC;IAC1C,MAAMe,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACV,KAAK,CAACD,MAAM,GAAGT,GAAG,CAAC;IAC1CiB,WAAW,CAAC,sBAAsB,CAAC,GAAGC,IAAI,GAAI,IAAGA,IAAK,EAAC,GAAG,GAAG;IAE7Dd,kBAAkB,CAACa,WAAW,CAAC;EACjC,CAAC,EAAE,CAACd,eAAe,EAAED,IAAI,CAAC,CAAC;EAE3BJ,SAAS,CAAC,MAAM;IACdO,UAAU,EAAE;EACd,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,UAC/BmB,MAAM,CAACC,IAAI,CAACnB,eAAe,CAAC,CAACoB,GAAG,CAAEC,KAAa,iBAC9C;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAM,SAAS,EAAC,WAAW;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1C;QAAM,SAAS,EAAC,WAAW;QAAA,UAAErB,eAAe,CAACqB,KAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA,GAF5BA,KAAK;MAAA;MAAA;MAAA;IAAA,QAIvC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GAnCKvB,eAAe;AAAA,KAAfA,eAAe;AAqCrB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}